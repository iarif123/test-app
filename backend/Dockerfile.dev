# ---- Base ----
# Ensure you run $(aws ecr get-login --no-include-email) in terminal prior to running the dockerfile
FROM node:10-stretch AS base

# Used to pass the git build sha1 to the container build process.
# This value is outputted if available on container startup
ARG CONTAINER_BUILD_COMMIT
ENV CONTAINER_BUILD_COMMIT $CONTAINER_BUILD_COMMIT

ENV PATH /var/app/node_modules/.bin:$PATH

# Creating application directory
RUN mkdir -p /var/app

WORKDIR /var/app

# ---- Dependencies ----
FROM base AS dependencies

# Install production packages
RUN npm set progress=false && npm config set depth 0
RUN npm ci --production
RUN cp -R node_modules prod_node_modules

# Install all packages (including devDependencies)
ENV NODE_ENV development
RUN npm ci

# ---- Development ----
FROM dependencies AS development

ENV CHOKIDAR_USEPOLLING true
ENV CHOKIDAR_INTERVAL 1000
ENV ENVIRONMENT development

# Copy Application code to app folder
COPY . /var/app

# Expose port 3000 which the app runs on
EXPOSE 3000

# Compile Typescript
RUN npm run dev:build

# Run app in watch mode
CMD npm run dev:watch

# ---- Production ----
FROM base AS production
ENV NODE_ENV production
COPY --from=dependencies /var/app/prod_node_modules ./node_modules

# Copy Application code to app folder
COPY . /var/app

# Expose port 3000 which the app runs on
EXPOSE 3000

# Compile Typescript
RUN npm run prod:build

# Start Command
CMD npm run prod:start
